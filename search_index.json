[["index.html", "Portfilio Naresh Introduction", " Portfilio Naresh Naresh de Bruijn 2024-05-05 Introduction red "],["curriculum-vitae.html", "Curriculum vitae Allow me to introduce myself briefly Education Internship / (major) project Relevant Coursework Experiences", " Curriculum vitae Name: Naresh Surname: de Bruijn gender: male date of birth: 02-06-1999 Position: Bachelor of Medical Data Science Allow me to introduce myself briefly I’m proficient in both Dutch and English languages. I’m deeply passionate about learning about cancer and continually seek opportunities to expand my knowledge in this area. Education Bacholar of Life Science (Medical Laboratory Research) Univeristy of Applied Sciences Utrecht Utrecht, The Netherlands 2028-2024 Anglia, Proficiency (CEFR C1) level Chichester College Chichester, West Sussex, Engeland 2017-2018 HAVO (N&amp;G profile) Erfgooiers College Huizen, North-Holland, The Netherlands 2011-2017 Internship / (major) project Internship at Hartwig Medical Foundation Hartwig Medical Foundation, Science Park, Amsterdam 2022-2023 Credits: 60 EC During my internship, I worked in two domains: diagnostics and innovation. In the diagnostics domain, I focused on understanding and maintaining the laboratory pipeline for cancer samples. In the innovation domain, I helped set up a targeted SNV-characterization method. Grade(s): Experimenting: 7, Research: 6 Projecticum Biomolecular Research (BMR) Hubrecht Institute, Science Park, Utrecht 2021-2022 Credits: 10 EC During my specialization in BMR, I worked on a project called Hexabody technology in collaboration with Ubrecht Institute. This technology targets cancer cells. I was responsible for conducting experiments to examine the stability of hexamer antibodies and using HPLC for monitoring. Grade(s): 8.1 Relevant Coursework Data Sciences for Biology 1 The course covers Advanced Bioinformatics (AB), aata analysis using R 1 and 2 (DAUR1 and DAUR2). The AB course delves into NGS data analysis, bash scripting, and various bioinformatics tools for gene annotation and motif discovery. DAUR1 introduces R for statistical analysis and data visualization, while DAUR2 builds on this with advanced R programming skills for RNA sequencing and metagenomics analysis. Both courses provide practical skills applicable in real-world scenarios. Credits: 15 EC Grade(s): Sufficient (70% or higher) Data Sciences for Biology 2 Workflows: This course focuses on data management, programming pipelines in GitHub and RStudio. It teaches the integration of various data analysis methods and concepts in a reproducible working environment. Projecticum: The aim of the Projecticum Data Science for Biology is to provide students with realistic practical experience in a “data analysis” research project. This course is the final part of the Data Science for Biology modules, where students can apply all acquired knowledge in existing research projects in collaboration with the Innovative Testing professorship of the Center of Expertise for Healthy and Sustainable Living and external research groups. The Projecticum goes beyond merely conducting experiments (competence ‘Experimentation’) as it emphasizes digital collaboration, defining a relevant and realistic research question, preparing experiments (collecting datasets), and data processing with reproducible codes (competence ‘Research’). Credits: 15 EC Grade(s): Sufficient (70% or higher) Tumorcell Biology The Cource covers how disruptions in various cellular processes can lead to the initiation, growth, and metastasis of tumors, including the role of cell signaling, regulation of cell division and apoptosis, as well as the influence on and by the tumor microenvironment. The course covers various processes contributing to cancer development, including tumorigenesis, genetic factors like tumor suppressor genes and proto-oncogenes, mutagenesis, aneuploidy, DNA repair, receptor trafficking, growth regulation mechanisms, proliferation signaling, stem cells, telomerase, immune response, apoptosis, angiogenesis, metastasis, and cancer treatment. Credits: 5 EC Grade(s): 6.5 Biotechnology Understanding of biotechnological methods for genetic modification of microorganisms, animals, and plants, as well as insights into downstream processing of biotechnological products and ethical considerations in biotechnology. Credits: 5 EC Grade(s): 6.5 Bioinformatics &amp; Data Processing The module provides an introduction to bioinformatics tools for addressing biological questions and processing large datasets as encountered in practical scenarios. It covers annotating DNA and protein sequences, mutation analysis, PCR primer design, and BLAST techniques. Students will work with open-source software, including Linux, to edit and analyze large datasets. Additionally, the module includes statistical analysis of experimental data, focusing on recognizing experimental design, data types, and selecting appropriate statistical tests. Students will also learn to interpret statistical relationships and become familiar with statistical analysis software. Credits: 5 EC Grade(s): 7.9 Experiences Financial management (kitchen) Unitas S.R. Utrecht, The Netherlands 2022-2023 I volunteered at my student society’s kitchen, where I cook for 150 Unitas S.R. members each workday with a team of 10 fellow members. In addition to culinary duties, I’ve taken on the role of managing the kitchen’s finances, handling financial planning and monitoring for Unitas S.R.’s kitchen operations. Covid-test sampler GGDrU Utrecht, The Netherlands 2020-2022 Collecting samples (such as nasal swabs or saliva) from individuals for Covid-19 testing. Residential support worker psychogeriatrics Vivium Zorggroep Laren, The Netherlands 2015-2018 Responsible for coordinating clients’ meals, dietary intake, organizing engaging activities, and providing essential daily home care. "],["future-plan.html", "Future plan", " Future plan In approximately two years from now, I will be completing my master’s program in Medical Science at the University of Amsterdam (UvA). My aspiration is to actively engage in an oncology research group, leveraging bioinformatics tools to advance the field of oncology. By combining my background in Life Sciences with a focus on data science for biology, I’m well-positioned to contribute meaningfully to oncology research with bioinformatic approaches. I have to keep pursuing opportunities to further education (like a master program), gain research experience, and network with professionals in the fields to achieve my goal. I want to learn more about Python, but I also want to learn more about bioinformatics and computational biology. Python is used in many scientific fields, including oncology research. It will help me analyse data, develop algorithms and contribute to research projects. usage of streamlit "],["guerrilla-analytics.html", "Guerrilla Analytics", " Guerrilla Analytics # libraries library(here) library(fs) library(tidyverse) Example Guerrilla Analytics DAUR-II knitr::include_graphics(here::here( &quot;documents&quot;, &quot;Guerrilla_Analytics_metagenomics.png&quot; )) Root of Workflow portfolio project # print root of workflows portfolio project dir_tree(&quot;.&quot;, recurse = TRUE, regexp = &quot;^.gitignore$|^[^_|(.git)]&quot;, all = TRUE) ## . ## ├── .gitignore ## ├── 01_CV.Rmd ## ├── 02_Future_plan.Rmd ## ├── 03_Guerrilla_Analytics.Rmd ## ├── 04_Celegans_plate_experiment.Rmd ## ├── DSFB2_portfolio.Rproj ## ├── LICENSE ## ├── README.md ## ├── data ## │ ├── CE.LIQ.FLOW.062_Tidydata.xlsx ## │ ├── METADATA.txt ## │ └── README.txt ## ├── documents ## │ ├── Guerrilla_Analytics_metagenomics.png ## │ └── README.txt ## ├── layout.css ## └── raw_data ## ├── CE.LIQ.FLOW.062_Tidydata.xlsx ## └── README.txt "],["c.elegans-plate-experiment.html", "C.elegans plate experiment", " C.elegans plate experiment setup # libraries library(here) library(tidyverse) library(readxl) library(ggplot2) library(reactable) Import and inspect dataset # import C.elegans data file CE_LIQ_FLOW_062_Tidydata &lt;- read_excel( here::here( &quot;raw_data&quot;, &quot;CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) # inspecting data in table format with the reactable reactable(data = CE_LIQ_FLOW_062_Tidydata, defaultPageSize = 5, compact = T, highlight = T) Scatterplot Pseudocode Decide which columns will be included in the scatterplot Checking and if needed change the datatypes of columns Plot the data in a scatterplot using ggplot Normalise y-axis counts Set the x-axis to a log10 scale Use Jitter to avoid overlaps of points # inspect the type of data of column RawData, compName, and compConcentration CE_LIQ_FLOW_062_Tidydata %&gt;% select( RawData, compName, compConcentration, expType) %&gt;% map(class) ## $RawData ## [1] &quot;numeric&quot; ## ## $compName ## [1] &quot;character&quot; ## ## $compConcentration ## [1] &quot;character&quot; ## ## $expType ## [1] &quot;character&quot; # Change &quot;compConcentration&quot; to numeric CE_LIQ_FLOW_062_Tidydata$compConcentration &lt;- parse_number(CE_LIQ_FLOW_062_Tidydata$compConcentration) # change &quot;compName&quot; into a factor CE_LIQ_FLOW_062_Tidydata$compName &lt;- factor(CE_LIQ_FLOW_062_Tidydata$compName, levels = unique(CE_LIQ_FLOW_062_Tidydata$compName)) # change &quot;expType&quot; into a factor CE_LIQ_FLOW_062_Tidydata$expType &lt;- factor(CE_LIQ_FLOW_062_Tidydata$expType, levels = unique(CE_LIQ_FLOW_062_Tidydata$expType)) # Checking the new dataypes and factor levels CE_LIQ_FLOW_062_Tidydata %&gt;% select( RawData, compName, compConcentration, expType) %&gt;% map(class) ## $RawData ## [1] &quot;numeric&quot; ## ## $compName ## [1] &quot;factor&quot; ## ## $compConcentration ## [1] &quot;numeric&quot; ## ## $expType ## [1] &quot;factor&quot; # check levels of &quot;compName&quot; and &quot;expType&quot; CE_LIQ_FLOW_062_Tidydata %&gt;% select( compName, expType) %&gt;% map(levels) ## $compName ## [1] &quot;2,6-diisopropylnaphthalene&quot; &quot;decane&quot; ## [3] &quot;naphthalene&quot; &quot;Ethanol&quot; ## [5] &quot;S-medium&quot; ## ## $expType ## [1] &quot;experiment&quot; &quot;controlPositive&quot; &quot;controlNegative&quot; &quot;controlVehicleA&quot; Scatterplot # plot dataset in a scatterplot CE_LIQ_FLOW_062_Tidydata %&gt;% ggplot(aes(x = log10(compConcentration + .001), y = RawData))+ geom_point(aes(color = compName, shape = expType), size = 1.5, alpha = 0.8, position = position_jitter(width = 0.1))+ # jitter to avoid overlap labs( title = &quot;Scatterplot CE_LIQ_FLOW_062_Tidydata&quot;, x = &quot;log10(compConcentration) in nM&quot;, y = &quot;RawData in counts&quot; ) The positive control for this experiments is controlPositive The negative control for this experiment is controlNegative. Organise Data: Gather data on offspring count for different concentrations of each compound. Statistical Analysis: Use statistical methods to determine if there’s a significant difference in offspring count between concentrations for each compound. Curve Fitting: Fit a curve to the data for each compound to find the concentration at which offspring count is halved (IC50). Compare Curves: Compare IC50 values between compounds to see if they differ. Normalising dataset # filter on &quot;controlNegative&quot; data CE_LIQ_FLOW_062_contNeg &lt;- CE_LIQ_FLOW_062_Tidydata %&gt;% filter(expType == &quot;controlNegative&quot;) # calculate mean of &quot;RawData&quot; of the filtered dataset contNeg_mean &lt;- mean(CE_LIQ_FLOW_062_contNeg$RawData) # check contNeg_mean contNeg_mean ## [1] 85.9 # create a normalised column with the normalised values. CE_LIQ_FLOW_062_Tidydata_norm &lt;- CE_LIQ_FLOW_062_Tidydata %&gt;% mutate(normalised = RawData/mean(contNeg_mean)) # mean RawData mean(CE_LIQ_FLOW_062_Tidydata_norm$RawData, na.rm=T) ## [1] 68.10423 # check normalised column CE_LIQ_FLOW_062_Tidydata_norm %&gt;% select(compName, expType, compConcentration, RawData, normalised) %&gt;% reactable(defaultPageSize = 5) # check the normalisation values are a fraction of 1 CE_LIQ_FLOW_062_contNeg_norm &lt;- CE_LIQ_FLOW_062_Tidydata_norm %&gt;% filter(expType == &quot;controlNegative&quot;) contNegNorm_mean &lt;- mean(CE_LIQ_FLOW_062_contNeg_norm$normalised) # check if mean value of controlNegative is equal to &quot;1&quot; contNegNorm_mean ## [1] 1 Scatterplot normalised dataset CE_LIQ_FLOW_062_Tidydata_norm %&gt;% ggplot(aes(x = log10(compConcentration + .001), y = normalised))+ geom_point(aes(color = compName, shape = expType), size = 1.5, alpha = 0.8, position = position_jitter(width = 0.1))+ # jitter to avoid overlap labs( title = &quot;Scatterplot normalised CE_LIQ_FLOW_062_Tidydata&quot;, caption = &quot;Dataset is normalised with the negative control mean&quot;, y = &quot;Normalised RawData counts&quot;, x = &quot;log10(compConcentration) in nM&quot;) Figure 1: Fig. 5.1: In this experiment, we have two control groups: the positive control, labeled as ‘controlPositive,’ and the negative control, labeled as ’controlNegative. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
